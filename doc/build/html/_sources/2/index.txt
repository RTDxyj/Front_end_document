======================
二.HTML书写规范
======================

-----------------------------------------------------------------------------------------
1，每个完整的html页面的第一行添加标准模式的声明，确保在每个浏览器中拥有一致的展现.
-----------------------------------------------------------------------------------------

::

	<!DOCTYPE html>
	
--------------------------------------------------------------
2，文档类型声明统一为HTML5声明类型，编码统一为UTF-8.
--------------------------------------------------------------

::

	<meta charset="UTF-8">
	
------------------------------------------------------------------ 
3，引入样式文件或javascript文件时，须略去默认类型声明.
------------------------------------------------------------------

::

	<script src="…"></script>
	
----------------------------------------------
4，书写链接地址时，必须避免重定向.例如.
----------------------------------------------

::

	<a href=’http://taobao.com/’></a> //即须在url地址后面加上‘/’

	
-------------------------------
5，<head>中可添加的信息.
-------------------------------

::

	<meta name="author" content="smile@kang.cool">//作者
	
	<meta name="description" content="hello">//网页描述
	
	<meta name="keywords" content="a,b,c">//关键字,“，”分隔
	
	<meta http-equiv="expires" content="Wed, 26 Feb 1997 08：21：57 GMT">//设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅
	
	<meta http-equiv="Pragma" content="no-cache">//禁止浏览器从本地机的缓存中调阅页面内容
	
	<meta http-equiv="Window-target" content="_top">//用来防止别人在框架里调用你的页面
	
	<meta http-equiv="Refresh" content="5;URL=http://kahn1990.com/">//跳转页面，5指时间停留5秒 网页搜索机器人向导。用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引
	
	<meta name="robots" content="none">//content的参数有all,none,index,noindex,follow,nofollow，默认是all
	
	<link rel="Shortcut Icon" href="favicon.ico">//收藏图标
	
	<meta http-equiv="Cache-Control" content="no-cache, must-revalidate">//网页不会被缓存
	
	
非特殊情况下css样式文件外链至<head></head>之间，javascript文件外链至页面底部

-----------------------------------------------
6，出于性能考虑，脚本异步加载很关键.
-----------------------------------------------

一段脚本会一直阻塞DOM解析，直至它完全地加载和执行完毕。这样会造成页面显示的延迟，特别是一些重量级的脚本，对用户体验来说那真是一个巨大的影响。异步加载脚本可缓解这种性能的影响。如果只需兼容IE10+，可将HTML5的async属性加至脚本中，它可防止阻塞DOM的解析，甚至你可以将脚本引用写在<head>里也没有影响。
如需兼容老旧的浏览器，实践表明可使用用来动态注入脚本的脚本加载器。

脚本引用写在body结束标签之前，并带上async属性，这虽然在老旧浏览器中不会异步加载脚本，但它只阻塞了body结束标签之前的DOM解析，这就大大降低了其阻塞影响。而在现代浏览器中，脚本将在DOM解析器发现body尾部的script标签才进行，此时加载属于异步加载，不会阻塞CSSOM（但其执行仍发生在cssom之后，cssom全程是css对象模型）。

eg::

	<!DOCTYPE html>
	<html>
	<head>
		<link rel="stylesheet" href="css/main.css">
	</head>
	<body>
		<!-- 逻辑代码 -->
		<!-- 逻辑代码底部 -->
	<script src="js/jquery/jquery.min.js"></script>
	<script src="js/app.js" async></script>
	</body>
	</html>
	

-------------------------------------------------------------------------------
7，HTML属性应当按照以下给出的顺序一次排列，来确保代码的易读性.
-------------------------------------------------------------------------------

::

	class
	
	id 、 name
	
	data-*
	
	src、for、 type、 href
	
	title、alt
	
	aria-*、 role
	

-----------------------------------------------	
8，HTML中最好不要将无内容元素的标签闭合.
-----------------------------------------------


例如:使用<br>而非<br/>.编码均遵循XHTML标准，标签，属性，属性命名由小写英文，数字和_组成,且所有标签必须闭合，属性值必须用双引号“”，避免使用中文拼音尽量简易并要求语义化。


-----------------------------------------------------------------------------------------------
9，在每一个块状元素，列表元素和表格元素后，加上一新空白行，并对其子孙元素进行缩进.
-----------------------------------------------------------------------------------------------


内联元素写在一行内，块状元素还有列表和表格要另起一行。（如果由于换行的空格引发了不可预计的问题，那将所有元素并入一行也是可以接受的，格式警告总好过错误警告）。
html引导：使用双引号（“”），而不是单引号（‘’）。


不推荐::


	<div class=’news-article’></div>
	

推荐::

	<div class=”news-article”></div>
	

-----------------------------------------------------
10，能以背景形式呈现的图片，尽量写入css样式中.
-----------------------------------------------------

--------------------------------------------------
11，书写页面过程中，请考虑向后扩展性.
--------------------------------------------------

--------------------------------------------------------------------------
12，重要图片必须加上alt属性，给重要的元素和截断的元素加上title.
--------------------------------------------------------------------------

---------------------------------------------------------
13，在页面中尽量避免使用style属性，即style=“…”.
---------------------------------------------------------

	
