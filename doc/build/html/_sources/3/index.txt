============================================
三.CSS书写规范
============================================

------------------------------------------------
1，css样式新建或者修改尽量遵循以下原则.
------------------------------------------------

	a,书写代码前，考虑并提高样式重复使用率；

	b,根据新建样式的使用范围分为三级：公共样式（全站级），模块样式（产品级），页面样式（页面级）

	c,尽量通过继承和层叠重用已有样式。

	d,不要轻易改动公共样式css，改动后，要经过全面测试。


----------------------------
2，css属性显示顺序.
----------------------------

	a,显示属性

	b,元素位置

	c,元素属性

	d,元素内容属性

---------------------
3，css书写顺序.
---------------------

::

		.header {
		/* 显示属性 */
			display || visibility
			list-style
			position top || right || bottom || left
			z-index
			clear
			float
		/* 自身属性 */
			width max-width || min-width
			height max-height || min-height
			overflow || clip
			margin
			padding
			outline
			border
			background
		/* 文本属性 */
			color
			font
			text-overflow
			text-align
			text-indent
			line-height
			white-space
			vertical-align
			cursor
			content
		}

----------------------------------------------		
4，兼容多个浏览器时，将标准属性写在底部.
----------------------------------------------

::

	-moz-border-radius: 15px; /* Firefox */
	
	-webkit-border-radius: 15px; /* Safari和Chrome */
	
	border-radius: 15px; /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 *//标准属性


----------------------------------------------------------------------------------------------------------------------------------------------------------
5，浏览器将检查整个文档中的所有链接和每个链接的父元素，并遍历文档树去查找ID为header的祖先元素，如果找不到header将追溯到文档的根节点.
----------------------------------------------------------------------------------------------------------------------------------------------------------


解决方法如下::


	避免使用通配规则和相邻兄弟选择符、子选择符,、后代选择符、属性选择符等选择器
	
	不要限定id选择符，如div#header（提权的除外）
	
	不要限定类选择器，如ul.recommend（提权的除外）
	
	不要使用 ul li a 这样长的选择符
	
	避免使用标签子选择符，如#header > li > a
	

----------------------------------	
6，使用z-index属性.
----------------------------------

使用z-index的值尽量不要超过150（通用组的除外），页面中的元素内容的z-index不能超过10（提示框等模块除外但维持在150以下），不允许直接使用（999~9999）之间的大值。

--------------------------------
7，尽量避免使用CSS Hack.
--------------------------------

-----------------------------------
8，避免使用低效的选择器.
-----------------------------------

-------------------------------
9，减少使用影响性能的属性.
-------------------------------

::

	position:absolute;
	
	float:left;//如这些定位或浮动属性
	

减少在css中使用滤镜表达式和图片repeat，尤其在body当中，渲染性能极差，如果需要用repeat的话，图片的宽和高不能少于8px。

--------------------------
10，合理的避免使用id.
--------------------------

::

	一般情况下id不应该被应用于样式；
	
	id的样式不能被复用并且每个页面中你只能使用一次id；
	
	使用id唯一有效的是确定网页或整个站点中的位置；
	
	尽管如此，你应该始终考虑使用class，而不是id，除非只使用一次；
	
	另一个反对使用id的观点是含有id选择器权重很高。

	
------------------------------------	
11，css选择器中避免标签名.
------------------------------------


当构建选择器时应该选择使用清晰，准确和有语义的class（类）名；

不要使用标签选择器；

如果你只关心你的class（类）名，而不是你的代码元素，这样会更容易维护。

从分离的角度考虑，在表现层中不应该分配html标记/语义。


不推荐::

	/*css代码*/
	div.content>h2.title{
					font-size:2em;
					}

推荐::

	/*css代码*/
	.content>.title{
		font-size:2em;
	}

	
-----------------------
12,0和单位.
-----------------------

省略“0”值后面的单位，不要在0值后面使用单位，除非有值；


不推荐::

	padding:0px;
	
	margin:0em;
	
推荐::
	
	padding:0;
	
	margin:0;


---------------------------
13,十六进制表示法.
---------------------------


在可能的情况下，使用3个字符的十六进制表示法。颜色值允许这样表示，3个字符的十六进制表示法更简短；使用小写的十六进制数字。::
	
	color:#FF33AA;//不推荐

	color:#f3a;//推荐
	

-----------------------------------	
14，id和class（类）名的分隔符.
-----------------------------------


	使用连字符（中划线）分隔id和class（类）名中的单词，为了增强可理解性，在选择器中不要使用除了连字符（中划线）以外的任何字符（包括没有）来连接单词和缩写，最好的坚持是使用连字符作为分隔符。

-------------------
15，声明结束.
-------------------

	为了保证一致性和可扩展性，每个声明应该用分号结束，每个声明换行。
	
eg::

	.test{
		display:block;
		height:100px;
	}
